{"version":3,"sources":["loader.gif","components/Sidebar.js","store/actions.js","store/reducers.js","store/store.js","services/HttpService.js","services/NoteService.js","store/reducers/notes.js","services/AuthService.js","store/reducers/auth.js","pages/Dashboard.js","pages/NewNote.js","pages/EditNote.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","connect","state","noteList","notes","useState","query","setQuery","setNotes","mobileSidebarVisibility","setMobileSidebarVisibility","useEffect","_","className","to","onClick","placeholder","onChange","event","searchQuery","target","value","length","filter","note","title","toLowerCase","includes","onKeyUp","key","map","id","setUser","user","type","notebook","combineReducers","action","newState","index","findIndex","parseInt","splice","newState2","index2","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","store","createStore","rootReducer","applyMiddleware","endpoint","base","auth","handleResponse","response","status","json","then","jsonResponse","message","statusText","body","getState","fetch","method","headers","token","Promise","resolve","JSON","parse","localStorage","getItem","FormData","hasOwnProperty","append","stringify","getNotes","dispatch","NoteService","Error","catch","err","addNote","AddNoteAction","editNote","editNoteAction","deleteNote","credentials","setItem","removeItem","login","email","password","form","AuthService","emailError","passwordError","formError","logout","bindActionCreators","doLogin","doLogout","fetchNotes","name","onSubmit","preventDefault","setTitle","description","setDescription","tabIndex","style","width","trim","Date","getTime","height","minHeight","resize","match","history","params","find","push","updatedNote","src","loader","alt","path","exact","render","props","NewNote","EditNote","Dashboard","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","indexOf","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e3941ea1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.31ea9ddf.gif\";","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Sidebar = ({ noteList }) => {\r\n\r\n    const [query, setQuery] = useState('');\r\n    const [notes, setNotes] = useState(noteList);\r\n    const [mobileSidebarVisibility, setMobileSidebarVisibility] = useState(false);\r\n\r\n    useEffect(_ => {\r\n        setNotes(noteList);\r\n    }, [noteList])\r\n\r\n    const search = event => {\r\n        const searchQuery = event.target.value;\r\n        setQuery(searchQuery);\r\n        if (searchQuery.length === 0) {\r\n            return setNotes(noteList);\r\n        }\r\n        return setNotes(noteList.filter(note => {\r\n            return note.title.toLowerCase().includes(event.target.value.toLowerCase());\r\n        }));\r\n    };\r\n\r\n    const clearIfEscape = event => {\r\n        if (event.key === 'Escape') {\r\n            setQuery('');\r\n            return setNotes(noteList);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={\"sideBar\" + (mobileSidebarVisibility ? \"\" : \" not-visible\")}>\r\n            <div className=\"logo font-bold p-3 text-xl uppercase\">\r\n                <Link to=\"/\" onClick={() => { setMobileSidebarVisibility(false) }} className=\"cursor-pointer text-red-500\">Notebook</Link>\r\n                <span onClick={() => { setMobileSidebarVisibility(!mobileSidebarVisibility) }} className=\"md:hidden block float-right px-3 ml-2 rounded text-white bg-red-500 hover:bg-red-600 text-sm py-1 px-2 cursor-pointer\">&#8942;</span>\r\n                <Link to=\"/new\" onClick={() => { setMobileSidebarVisibility(false) }} className=\"float-right rounded text-white bg-red-500 hover:bg-red-600 text-sm py-1 px-2 cursor-pointer\">New</Link>\r\n            </div>\r\n            <input\r\n                placeholder=\"Search\"\r\n                className=\"md:block hidden border-red-300 border-t border-b border-r-0 border-l-0 focus:outline-none\"\r\n                onChange={search}\r\n                onKeyUp={clearIfEscape}\r\n                value={query} />\r\n            <div className=\"py-2 sidebarLinkContainer\">\r\n                {\r\n                    notes.map(note => {\r\n                        return <Link to={\"/note/\" + note.id} key={note.id} onClick={() => { setMobileSidebarVisibility(false) }} className=\"p-2 hover:bg-red-500 hover:text-white cursor-pointer block\">{note.title}</Link>;\r\n                    })\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        noteList: state.notes\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","// action types\r\n\r\nexport const ADD_NOTE = 'ADD_NOTE';\r\nexport const EDIT_NOTE = 'EDIT_NOTE';\r\nexport const DELETE_NOTE = 'DELETE_NOTE';\r\nexport const SET_NOTES = 'SET_NOTES';\r\n\r\nexport const SET_USER = 'SET_USER';\r\n\r\nexport const STATE_PENDING = 'STATE_PENDING';\r\nexport const STATE_SUCCESS = 'STATE_SUCCESS';\r\nexport const STATE_ERROR = 'STATE_ERROR';\r\n\r\n\r\n// action creators\r\n\r\nexport function addNote(note) {\r\n    return { type: ADD_NOTE, note };\r\n}\r\n\r\nexport function editNote(note) {\r\n    return { type: EDIT_NOTE, note };\r\n}\r\n\r\nexport function deleteNote(id) {\r\n    return { type: DELETE_NOTE, id };\r\n}\r\n\r\nexport function setNotes(notes) {\r\n    return { type: SET_NOTES, notes };\r\n}\r\n\r\n\r\nexport function setUser(user) {\r\n    return { type: SET_USER, user };\r\n}\r\n\r\nexport function setStatePending() {\r\n    return { type: STATE_PENDING };\r\n}\r\n\r\nexport function setStateSuccess() {\r\n    return { type: STATE_SUCCESS };\r\n}\r\n\r\nexport function setStateError() {\r\n    return { type: STATE_ERROR };\r\n}\r\n","import { ADD_NOTE, SET_NOTES, EDIT_NOTE, DELETE_NOTE, SET_USER, STATE_SUCCESS, STATE_ERROR, STATE_PENDING } from './actions';\r\nimport { combineReducers } from 'redux';\r\n\r\n// const initialState = {\r\n//     notes: []\r\n// };\r\n\r\nfunction notes(state = [], action) {\r\n    switch (action.type) {\r\n        case ADD_NOTE:\r\n            return [\r\n                ...state,\r\n                action.note\r\n            ]\r\n        case EDIT_NOTE:\r\n            const newState = [\r\n                ...state\r\n            ];\r\n            const index = newState.findIndex(note => note.id === parseInt(action.note.id));\r\n            newState.splice(index, 1, action.note);\r\n            return newState;\r\n        case DELETE_NOTE:\r\n            const newState2 = [\r\n                ...state\r\n            ];\r\n            const index2 = newState2.findIndex(note => note.id === parseInt(action.id));\r\n            newState2.splice(index2, 1);\r\n            return newState2;\r\n        case SET_NOTES:\r\n            return action.notes;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction user(state = null, action) {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return action.user;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction state(state = STATE_SUCCESS, action) {\r\n    switch (action.type) {\r\n        case STATE_SUCCESS:\r\n            return STATE_SUCCESS;\r\n        case STATE_ERROR:\r\n            return STATE_ERROR;\r\n        case STATE_PENDING:\r\n            return STATE_PENDING;\r\n        default:\r\n            return STATE_SUCCESS;\r\n    }\r\n}\r\n\r\nconst notebook = combineReducers({\r\n    user,\r\n    notes,\r\n    state\r\n});\r\n\r\nexport default notebook;\r\n\r\n// function notebook(state = initialState, action) {\r\n//     return {\r\n//         notes: notes(state.notes, action)\r\n//     };\r\n// }","\r\n// import { mainMiddleware } from './middlewares';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst middlewares = thunk;\r\nconst store = createStore(rootReducer, {}, composeEnhancers(applyMiddleware(middlewares)));\r\n\r\nexport default store;","\r\n\r\nexport const endpoint = {\r\n    // base: 'http://localhost:8000/api/',\r\n    base: 'https://notebook-api.shubhamschahar.com/api/',\r\n    auth: 'login',\r\n    note: 'note'\r\n}\r\n\r\n\r\nexport const handleResponse = response => {\r\n    if (response.status !== 200) {\r\n    }\r\n    return response.json().then(jsonResponse => {\r\n        return {\r\n            status: response.status,\r\n            message: response.statusText,\r\n            body: jsonResponse\r\n        };\r\n    })\r\n}","import store from \"../store/store\";\r\nimport { endpoint, handleResponse } from \"./HttpService\";\r\n\r\nexport default {\r\n    getNote: () => {\r\n        const user = store.getState().user;\r\n        if (!user) {\r\n            return Promise.resolve({\r\n                status: 200,\r\n                message: 'Fetched  from localstorage',\r\n                body: JSON.parse(localStorage.getItem('notes')) || []\r\n            });\r\n        } else {\r\n\r\n            return fetch(endpoint.base + endpoint.note, {\r\n                method: 'get',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${user.token}`\r\n                }\r\n            })\r\n                .then(handleResponse)\r\n        }\r\n    },\r\n    addNote: note => {\r\n        const user = store.getState().user;\r\n        if (!user) {\r\n            return Promise.resolve({\r\n                status: 200,\r\n                message: 'Fetched  from localstorage',\r\n                body: JSON.parse(localStorage.getItem('notes')) || []\r\n            })\r\n        } else {\r\n            const body = new FormData();\r\n            for (const key in note) {\r\n                if (note.hasOwnProperty(key)) {\r\n                    body.append(key, note[key]);\r\n                }\r\n            }\r\n            return fetch(endpoint.base + endpoint.note, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${user.token}`\r\n                },\r\n                body\r\n            })\r\n                .then(handleResponse);\r\n        }\r\n    },\r\n    editNote: note => {\r\n        const user = store.getState().user;\r\n        if (!user) {\r\n            return Promise.resolve({\r\n                status: 200,\r\n                message: 'Fetched from localstorage',\r\n                body: JSON.parse(localStorage.getItem('notes')) || []\r\n            })\r\n        } else {\r\n            const body = new FormData();\r\n            for (const key in note) {\r\n                if (note.hasOwnProperty(key)) {\r\n                    body.append(key, note[key]);\r\n                }\r\n            }\r\n            return fetch(endpoint.base + endpoint.note + '/' + note.id, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${user.token}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(note),\r\n                // mode: 'no-cors'\r\n            })\r\n                .then(handleResponse);\r\n        }\r\n    },\r\n    deleteNote: id => {\r\n        const user = store.getState().user;\r\n        if (!user) {\r\n            return Promise.resolve({\r\n                status: 200,\r\n                message: 'Fetched  from localstorage',\r\n                body: JSON.parse(localStorage.getItem('notes')) || []\r\n            })\r\n        } else {\r\n            return fetch(endpoint.base + endpoint.note + '/' + id, {\r\n                method: 'delete',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${user.token}`\r\n                }\r\n            })\r\n                .then(handleResponse);\r\n        }\r\n    }\r\n}","import { setStatePending, setStateSuccess, setStateError, setNotes, addNote as AddNoteAction, editNote as editNoteAction, deleteNote as deleteNoteAction } from \"../actions\"\r\nimport NoteService from \"../../services/NoteService\";\r\n\r\nexport const getNotes = dispatch => {\r\n    return dispatch => {\r\n        dispatch(setStatePending());\r\n        NoteService.getNote()\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    dispatch(setNotes(response.body));\r\n                    dispatch(setStateSuccess());\r\n                } else {\r\n                    throw new Error('failed fetch!')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch(setStateError());\r\n            })\r\n    }\r\n}\r\n\r\nexport const addNote = note => {\r\n    return dispatch => {\r\n        dispatch(setStatePending());\r\n        NoteService.addNote(note)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    dispatch(AddNoteAction(response.body));\r\n                    dispatch(setStateSuccess());\r\n                } else {\r\n                    throw new Error('failed fetch!');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch(setStateError());\r\n            });\r\n    }\r\n}\r\n\r\nexport const editNote = note => {\r\n    return dispatch => {\r\n        dispatch(setStatePending());\r\n        NoteService.editNote(note)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    dispatch(editNoteAction(response.body));\r\n                    dispatch(setStateSuccess());\r\n                } else {\r\n                    throw new Error('failed fetch!');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch(setStateError());\r\n            });\r\n    }\r\n}\r\n\r\nexport const deleteNote = note => {\r\n    return dispatch => {\r\n        dispatch(setStatePending());\r\n        NoteService.deleteNote(note)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    dispatch(deleteNoteAction(response.body.id));\r\n                    dispatch(setStateSuccess());\r\n                } else {\r\n                    throw new Error('failed fetch!');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch(setStateError());\r\n            });\r\n    }\r\n}","import { endpoint, handleResponse } from \"./HttpService\";\r\n\r\nexport default {\r\n    endpoint,\r\n    login: (credentials) => {\r\n        return fetch(endpoint.base + endpoint.auth, {\r\n            method: 'post',\r\n            body: credentials\r\n        }).then(handleResponse);\r\n    },\r\n    saveUser: user => {\r\n        return Promise.resolve(localStorage.setItem('user', JSON.stringify(user)));\r\n    },\r\n    removeUser: () => {\r\n        return Promise.resolve(localStorage.removeItem('user'));\r\n    },\r\n\r\n}","import { setStatePending, setStateSuccess, setStateError, setUser } from \"../actions\"\r\nimport AuthService from \"../../services/AuthService\";\r\nimport { getNotes } from \"./notes\";\r\n\r\nexport const login = ({ email, password }) => {\r\n    return dispatch => {\r\n        dispatch(setStatePending());\r\n        const form = new FormData();\r\n        form.append('email', email);\r\n        form.append('password', password);\r\n        return AuthService.login(form)\r\n            .then(response => {\r\n                switch (response.status) {\r\n                    case 200:\r\n                        return AuthService.saveUser(response.body)\r\n                            .then(() => {\r\n                                return Promise.resolve(dispatch(setUser(response.body)))\r\n                                    .then(Promise.resolve(dispatch(getNotes())))\r\n                                    .then(Promise.resolve(dispatch(setStateSuccess())))\r\n                                    .then(() => {\r\n                                        return { emailError: '', passwordError: '' };\r\n                                    });\r\n                            });\r\n                    case 422:\r\n                        const formError = {};\r\n                        if ('email' in response.body) {\r\n                            formError.emailError = response.body.email[0];\r\n                        } else {\r\n                            formError.emailError = '';\r\n                        }\r\n                        if ('password' in response.body) {\r\n                            formError.passwordError = response.body.password[0];\r\n                        } else {\r\n                            formError.passwordError = '';\r\n                        }\r\n                        dispatch(setStateError());\r\n                        return Promise.resolve(formError);\r\n                    default:\r\n                        dispatch(setStateError());\r\n                        return Promise.resolve({ emailError: '', passwordError: '' });\r\n                };\r\n            })\r\n            .catch(err => {\r\n                dispatch(setStateError());\r\n                return Promise.resolve({ emailError: '', passwordError: '' });\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return dispatch => {\r\n        AuthService.removeUser()\r\n            .then(_ => {\r\n                dispatch(setUser(null));\r\n                dispatch(getNotes());\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getNotes } from '../store/reducers/notes';\r\nimport { login, logout } from '../store/reducers/auth';\r\nimport { STATE_ERROR } from '../store/actions';\r\n\r\nfunction DashboardPage({ user, doLogin, doLogout, fetchNotes, state }) {\r\n\r\n    const authenticate = event => {\r\n        event.preventDefault();\r\n        const form = event.target;\r\n        const email = form.email.value;\r\n        const password = form.password.value;\r\n        doLogin({ email, password });\r\n    }\r\n\r\n    const logout = () => {\r\n        doLogout();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\" flex justify-center items-center h-screen\">\r\n            <div>\r\n                <div className=\"app-name text-4xl font-bold tracking-widest text-red-500 w-100 text-center mb-5\" >Notebook</div>\r\n                {\r\n                    user\r\n                        ?\r\n                        <div className=\"text-center\">\r\n                            <div className=\"mb-5\">Welcome, {user.name}</div>\r\n                            <button\r\n                                className=\"px-3 py-1 bg-red-500 hover:bg-red-600 text-white uppercase rounded focus:outline-none block mx-auto\"\r\n                                onClick={logout}\r\n                            >Logout</button>\r\n                        </div>\r\n                        :\r\n                        <form className=\"\" onSubmit={authenticate}>\r\n                            {state === STATE_ERROR ? <span className=\"text-red-500 text-xs text-center w-full block mb-3\">Please check your details!</span> : \"\"}\r\n                            <input\r\n                                placeholder=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                className=\"block py-2 w-64 focus:outline-none hover:bg-gray-100 focus:bg-gray-100 mb-3 mx-auto\"\r\n                            />\r\n                            <input\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                className=\"block py-2 w-64 focus:outline-none hover:bg-gray-100 focus:bg-gray-100 mb-5 mx-auto\"\r\n                            />\r\n                            <button\r\n                                className=\"px-3 py-1 bg-red-500 hover:bg-red-600 text-white uppercase rounded focus:outline-none block mx-auto mb-3\"\r\n                                type=\"submit\"\r\n                            >Login</button>\r\n                            <span className=\"text-xs text-red-500 block text-center\">Logging in will create account if not present already!</span>\r\n                            <span className=\"text-xs text-red-500 block text-center\">No verification required!</span>\r\n                        </form>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    state: state.state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    doLogin: login,\r\n    doLogout: logout,\r\n    fetchNotes: getNotes,\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardPage);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addNote } from '../store/reducers/notes';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst NewNotePage = ({ notes, addNote }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const updateTitle = (event) => {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    const updateDescription = event => {\r\n        setDescription(event.target.value);\r\n    }\r\n\r\n    const saveNote = () => {\r\n        if (!title.trim()) {\r\n            return;\r\n        }\r\n        const note = { id: (new Date()).getTime(), title, description };\r\n        addNote(note);\r\n        setTitle('');\r\n        setDescription('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"py-3 md:px-8 px-3 border-b border-red-300\">\r\n                <input\r\n                    placeholder=\"Please enter a title...\"\r\n                    onChange={updateTitle}\r\n                    value={title}\r\n                    className=\"text-xl font-bold text-red-500 focus:outline-none\"\r\n                    tabIndex=\"0\"\r\n                    style={{ width: 'calc(100% - 50px)' }}\r\n                />\r\n                <button onClick={saveNote} tabIndex=\"3\" className=\"float-right uppercase rounded text-white bg-red-500 hover:bg-red-600 text-sm py-1 px-2 cursor-pointer\">Save</button>\r\n            </div>\r\n            <div className=\"md:px-8 px-3\" style={{ height: \"calc(100vh - 55px)\" }}>\r\n                <textarea\r\n                    placeholder=\"Please write some description...\"\r\n                    onChange={updateDescription}\r\n                    value={description}\r\n                    tabIndex=\"2\"\r\n                    className=\"block mb-3 w-full h-full md:px-2 py-1 focus:outline-none\"\r\n                    style={{ minHeight: '15rem', resize: \"none\" }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    notes: state.notes\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    addNote: addNote\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewNotePage);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editNote } from '../store/reducers/notes';\r\nimport { deleteNote } from '../store/reducers/notes';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst EditNotePage = ({ notes, match, history, editNote, deleteNote }) => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const { params: { id } } = match;\r\n    const note = notes.find(note => note.id === parseInt(id));\r\n\r\n    useEffect(() => {\r\n        setTitle(note.title || '');\r\n        setDescription(note.description || '');\r\n    }, [note.title, note.description]);\r\n\r\n    const updateTitle = (event) => {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    const updateDescription = event => {\r\n        setDescription(event.target.value);\r\n    }\r\n\r\n    const saveNote = () => {\r\n        const updatedNote = { id: parseInt(id), title, description };\r\n        editNote(updatedNote);\r\n    };\r\n\r\n    const removeNote = () => {\r\n        deleteNote(id);\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"py-3 md:px-8 px-3 border-b border-red-300\">\r\n                <input\r\n                    placeholder=\"Title\"\r\n                    onChange={updateTitle}\r\n                    value={title}\r\n                    className=\"text-xl font-bold text-red-500 focus:outline-none\"\r\n                    style={{ width: 'calc(100% - 120px)' }}\r\n                />\r\n                <button onClick={removeNote} className=\"float-right uppercase rounded text-white bg-red-500 hover:bg-red-600 text-sm py-1 px-2 cursor-pointer\">Delete</button>\r\n                <button onClick={saveNote} className=\"float-right uppercase rounded text-white bg-green-500 hover:bg-green-600 text-sm py-1 px-2 cursor-pointer mr-1\">Save</button>\r\n            </div>\r\n            <div className=\"md:px-8 px-3 flex\" style={{ height: \"calc(100vh - 55px)\" }}>\r\n                <textarea\r\n                    placeholder=\"Please write some description...\"\r\n                    onChange={updateDescription}\r\n                    value={description}\r\n                    className=\"block mb-3 w-full h-full md:px-2 py-1 focus:outline-none\"\r\n                    style={{ minHeight: '15rem', resize: \"none\" }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    notes: state.notes\r\n});\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         editNote: notes => dispatch(editNote(notes)),\r\n//         deleteNote: id => dispatch(deleteNote(id))\r\n//     };\r\n// }\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    editNote: editNote,\r\n    deleteNote: deleteNote\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditNotePage);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Sidebar from './components/Sidebar';\nimport DashboardPage from './pages/Dashboard';\nimport NewNotePage from './pages/NewNote';\nimport EditNotePage from './pages/EditNote';\n\nimport './styles/tailwind.css';\nimport './App.scss';\n\nimport loader from './loader.gif';\n\nimport { connect } from 'react-redux';\nimport { STATE_PENDING } from './store/actions';\n\nconst App = ({ state, user }) => {\n\n  return (\n    state === STATE_PENDING\n      ?\n      <div className=\"w-screen h-screen flex justify-center items-center\">\n        {/* <div className=\"w-10 h-10 border-2 border-l-0 border-gray-400 rounded-full spin\"></div> */}\n        <img src={loader} alt=\"loading\" className=\"loader\" />\n      </div>\n      :\n      <div>\n        {\n          user ? <Sidebar /> : ''\n        }\n        <div className={\"mainContainer\" + (user ? '' : ' guest')}>\n          {\n            user\n              ?\n              <Switch>\n                <Route path=\"/new\" exact render={props => <NewNotePage />} />\n                <Route path=\"/note/:id\" exact render={props => <EditNotePage {...props} />} />\n                <Route path=\"/\" render={props => <DashboardPage />} />\n              </Switch>\n              :\n              <Switch>\n                <Route path=\"/\" render={props => <DashboardPage />} />\n              </Switch>\n          }\n        </div>\n      </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state.state,\n    user: state.user\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { setUser } from './store/actions';\nimport store from './store/store';\nimport { getNotes } from './store/reducers/notes';\n\nstore.dispatch(setUser(JSON.parse(localStorage.getItem('user')) || null));\nstore.dispatch(getNotes());\n\nReactDOM.render(\n    <Provider store={store}>\n        {\n            window.location.hostname.indexOf('github.io') >= 0\n                ?\n                <HashRouter>\n                    <App />\n                </HashRouter>\n                :\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n        }\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}